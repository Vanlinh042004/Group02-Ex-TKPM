components:
  schemas:
    # Student Schemas
    Student:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/ObjectId'
        studentId:
          type: string
          example: 'ST2024001'
          description: 'Unique student identifier'
        fullName:
          type: string
          example: 'Nguyen Van A'
        dateOfBirth:
          type: string
          format: date
          example: '2000-01-01'
        gender:
          type: string
          enum: ['male', 'female', 'other']
          example: 'male'
        nationality:
          type: string
          example: 'Vietnam'
        faculty:
          $ref: '#/components/schemas/ObjectId'
        course:
          type: string
          example: 'Computer Science'
        program:
          $ref: '#/components/schemas/ObjectId'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        temporaryAddress:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        identityDocument:
          $ref: '#/components/schemas/IdentityDocument'
        email:
          type: string
          format: email
          example: 'student@example.com'
        phone:
          type: string
          example: '+84901234567'
        phoneNumberConfig:
          $ref: '#/components/schemas/ObjectId'
        status:
          $ref: '#/components/schemas/ObjectId'
        createdAt:
          $ref: '#/components/schemas/Date'
        updatedAt:
          $ref: '#/components/schemas/Date'

    CreateStudentRequest:
      type: object
      properties:
        studentId:
          type: string
          example: 'ST2024001'
        fullName:
          type: string
          example: 'Nguyen Van A'
          minLength: 2
          maxLength: 100
        dateOfBirth:
          type: string
          format: date
          example: '2000-01-01'
        gender:
          type: string
          enum: ['male', 'female', 'other']
          example: 'male'
        nationality:
          type: string
          example: 'Vietnam'
        faculty:
          type: string
          example: 'Computer Science'
          description: 'Faculty name or ID'
        course:
          type: string
          example: 'Computer Science'
        program:
          type: string
          example: 'Bachelor'
          description: 'Program name or ID'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        temporaryAddress:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        identityDocument:
          $ref: '#/components/schemas/IdentityDocument'
        email:
          type: string
          format: email
          example: 'student@example.com'
        phone:
          type: string
          example: '+84901234567'
        phoneNumberConfig:
          type: string
          example: 'Vietnam'
          description: 'Phone config country name or ID'
        status:
          type: string
          example: 'Active'
          description: 'Status name or ID'
      required:
        - studentId
        - fullName
        - dateOfBirth
        - gender
        - nationality
        - faculty
        - course
        - program
        - mailingAddress
        - identityDocument
        - email
        - phone
        - phoneNumberConfig
        - status

    UpdateStudentRequest:
      type: object
      properties:
        fullName:
          type: string
          example: 'Nguyen Van A'
          minLength: 2
          maxLength: 100
        dateOfBirth:
          type: string
          format: date
          example: '2000-01-01'
        gender:
          type: string
          enum: ['male', 'female', 'other']
          example: 'male'
        nationality:
          type: string
          example: 'Vietnam'
        faculty:
          type: string
          example: 'Computer Science'
        course:
          type: string
          example: 'Computer Science'
        program:
          type: string
          example: 'Bachelor'
        permanentAddress:
          $ref: '#/components/schemas/Address'
        temporaryAddress:
          $ref: '#/components/schemas/Address'
        mailingAddress:
          $ref: '#/components/schemas/Address'
        identityDocument:
          $ref: '#/components/schemas/IdentityDocument'
        email:
          type: string
          format: email
          example: 'student@example.com'
        phone:
          type: string
          example: '+84901234567'
        phoneNumberConfig:
          type: string
          example: 'Vietnam'
        status:
          type: string
          example: 'Active'

    StudentSearchRequest:
      type: object
      properties:
        studentId:
          type: string
          example: 'ST2024001'
        fullName:
          type: string
          example: 'Nguyen Van A'
        faculty:
          type: string
          example: 'Computer Science'

    StudentResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              $ref: '#/components/schemas/Student'

    StudentsResponse:
      allOf:
        - $ref: '#/components/schemas/SuccessResponse'
        - type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Student'
