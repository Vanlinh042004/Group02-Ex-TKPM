components:
  schemas:
    # Common Response Schemas
    SuccessResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        message:
          type: string
          example: 'Operation successful'
        data:
          type: object

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
          example: false
        message:
          type: string
          example: 'Error occurred'
        errors:
          type: array
          items:
            type: string

    PaginationQuery:
      type: object
      properties:
        page:
          type: integer
          minimum: 1
          default: 1
          description: 'Page number'
        limit:
          type: integer
          minimum: 1
          maximum: 100
          default: 20
          description: 'Number of items per page'
        sort:
          type: string
          description: "Sort field and direction (e.g., 'name:asc', 'createdAt:desc')"

    PaginatedResponse:
      type: object
      properties:
        success:
          type: boolean
          example: true
        data:
          type: array
          items: {}
        pagination:
          type: object
          properties:
            total:
              type: integer
              description: 'Total number of items'
            page:
              type: integer
              description: 'Current page number'
            limit:
              type: integer
              description: 'Items per page'
            totalPages:
              type: integer
              description: 'Total number of pages'
            hasNext:
              type: boolean
              description: 'Whether there are more pages'
            hasPrev:
              type: boolean
              description: 'Whether there are previous pages'

    # Common data types
    ObjectId:
      type: string
      pattern: '^[0-9a-fA-F]{24}$'
      example: '60f7b8b3b3b3b3b3b3b3b3b3'
      description: 'MongoDB ObjectId'

    Date:
      type: string
      format: date-time
      example: '2023-12-01T10:30:00.000Z'

    # Address Schema
    Address:
      type: object
      properties:
        streetAddress:
          type: string
          example: '123 Nguyen Van Linh'
        ward:
          type: string
          example: 'Phuong 10'
        district:
          type: string
          example: 'Quan 7'
        city:
          type: string
          example: 'Ho Chi Minh City'
        country:
          type: string
          example: 'Vietnam'
      required:
        - country

    # Identity Document Schema
    IdentityDocument:
      type: object
      properties:
        type:
          type: string
          enum: ['CMND', 'CCCD', 'Hộ chiếu']
          example: 'CCCD'
        number:
          type: string
          example: '123456789012'
        issueDate:
          type: string
          format: date
          example: '2020-01-01'
        issuePlace:
          type: string
          example: 'Ho Chi Minh City'
        expiryDate:
          type: string
          format: date
          example: '2030-01-01'
        hasChip:
          type: boolean
          example: true
          description: 'Required for CCCD'
        issuingCountry:
          type: string
          example: 'Vietnam'
          description: 'Required for Passport'
        notes:
          type: string
          description: 'Optional notes for Passport'
      required:
        - type
        - number
        - issueDate
        - issuePlace
        - expiryDate
