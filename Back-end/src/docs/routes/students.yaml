paths:
  /api/students:
    get:
      tags:
        - Students
      summary: Get all students
      description: Retrieve a list of all students with optional filtering
      parameters:
        - in: query
          name: page
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - in: query
          name: limit
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of students per page
        - in: query
          name: faculty
          schema:
            type: string
          description: Filter by faculty name
        - in: query
          name: status
          schema:
            type: string
          description: Filter by student status
      responses:
        '200':
          description: Students retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - Students
      summary: Create a new student
      description: Add a new student to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStudentRequest'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Student already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/students/{studentId}:
    get:
      tags:
        - Students
      summary: Get student by ID
      description: Retrieve a specific student by their student ID
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
          description: Student ID
      responses:
        '200':
          description: Student found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      tags:
        - Students
      summary: Update student
      description: Update student information
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
          description: Student ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStudentRequest'
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - Students
      summary: Delete student
      description: Remove a student from the system
      parameters:
        - in: path
          name: studentId
          required: true
          schema:
            type: string
          description: Student ID
      responses:
        '200':
          description: Student deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/students/search:
    post:
      tags:
        - Students
      summary: Search students
      description: Search for students using various criteria
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentSearchRequest'
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentsResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/students/import:
    post:
      tags:
        - Students
      summary: Import students from file
      description: Import multiple students from CSV or JSON file
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: CSV or JSON file containing student data
                format:
                  type: string
                  enum: [csv, json]
                  description: File format
              required:
                - file
                - format
      responses:
        '200':
          description: Students imported successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Students imported successfully'
                  data:
                    type: object
                    properties:
                      imported:
                        type: integer
                        example: 25
                      failed:
                        type: integer
                        example: 2
                      errors:
                        type: array
                        items:
                          type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/students/export:
    get:
      tags:
        - Students
      summary: Export students to file
      description: Export student data to CSV or JSON format
      parameters:
        - in: query
          name: format
          required: true
          schema:
            type: string
            enum: [csv, json]
          description: Export format
        - in: query
          name: faculty
          schema:
            type: string
          description: Filter by faculty
      responses:
        '200':
          description: Students exported successfully
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalError'
