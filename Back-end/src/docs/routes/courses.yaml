paths:
  # Course Routes
  /api/v2/courses:
    get:
      tags:
        - Courses
      summary: Get all courses
      description: Retrieve a list of all courses with optional filtering
      parameters:
        - in: query
          name: faculty
          schema:
            type: string
          description: Filter by faculty
        - in: query
          name: credits
          schema:
            type: integer
          description: Filter by credits
        - in: query
          name: isActive
          schema:
            type: boolean
          description: Filter by active status
      responses:
        '200':
          description: Courses retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Course'
        '500':
          $ref: '#/components/responses/InternalError'

    post:
      tags:
        - Courses
      summary: Create a new course
      description: Add a new course to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCourseRequest'
      responses:
        '201':
          description: Course created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Course'
        '400':
          $ref: '#/components/responses/BadRequest'
        '409':
          description: Course ID already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v2/courses/{courseId}:
    get:
      tags:
        - Courses
      summary: Get course by ID
      description: Retrieve a specific course by its course ID
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
          description: Course ID
      responses:
        '200':
          description: Course found
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Course'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    put:
      tags:
        - Courses
      summary: Update course
      description: Update course information
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
          description: Course ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCourseRequest'
      responses:
        '200':
          description: Course updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Course'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

    delete:
      tags:
        - Courses
      summary: Delete course
      description: Remove a course from the system
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
          description: Course ID
      responses:
        '200':
          description: Course deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: 'Course deleted successfully'
        '400':
          description: Cannot delete course with active registrations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v2/courses/{courseId}/deactivate:
    put:
      tags:
        - Courses
      summary: Deactivate course
      description: Deactivate a course instead of deleting it
      parameters:
        - in: path
          name: courseId
          required: true
          schema:
            type: string
          description: Course ID
      responses:
        '200':
          description: Course deactivated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    $ref: '#/components/schemas/Course'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
